# üåü EJEMPLO UNIVERSAL VADER - TODO EN UN ARCHIVO
# Este archivo demuestra c√≥mo Vader puede hacer CUALQUIER COSA

# üåê FRONTEND WEB
mostrar "=== CREANDO FRONTEND WEB ==="
crear pagina titulo="App Universal Vader"
crear header texto="¬°Bienvenido a Vader Universal!"
crear boton id="btn-saludo" texto="Saludar" 
crear input id="nombre" placeholder="Tu nombre aqu√≠"
crear div id="resultado"

# üé® ESTILOS CSS
aplicar estilo a "body" fondo="#000011" color="#FFD700"
aplicar estilo a "header" tama√±o="24px" peso="bold"
aplicar estilo a "button" fondo="#FFD700" color="#000" padding="10px"

# ‚ö° L√ìGICA JAVASCRIPT  
al hacer click en "btn-saludo"
    nombre = obtener valor de "nombre"
    si nombre no es vacio
        mostrar en "resultado" "¬°Hola " + nombre + " desde Vader!"
        reproducir sonido "saludo.mp3"
    sino
        mostrar en "resultado" "Por favor ingresa tu nombre"
    fin si
fin evento

# üñ•Ô∏è BACKEND API
mostrar "=== CREANDO BACKEND API ==="
crear servidor puerto=8080

# Ruta para obtener usuarios
ruta GET "/api/usuarios"
    usuarios = [
        {"id": 1, "nombre": "Ana", "edad": 25},
        {"id": 2, "nombre": "Carlos", "edad": 30}
    ]
    responder JSON usuarios
fin ruta

# Ruta para crear usuario
ruta POST "/api/usuarios"
    datos = obtener JSON del request
    nuevo_usuario = {
        "id": generar_id_unico,
        "nombre": datos.nombre,
        "edad": datos.edad,
        "creado": fecha_actual
    }
    guardar nuevo_usuario en base_datos
    responder JSON nuevo_usuario
fin ruta

# üì± FUNCIONALIDAD M√ìVIL
mostrar "=== AGREGANDO FEATURES M√ìVILES ==="
si es_dispositivo_movil
    crear boton "Tomar Foto" al hacer click
        foto = tomar foto
        mostrar foto en "resultado"
        vibrar 200
        notificar "¬°Foto tomada con Vader!"
    fin boton
    
    crear boton "Mi Ubicaci√≥n" al hacer click
        ubicacion = obtener ubicacion
        mostrar "Est√°s en: " + ubicacion.latitud + ", " + ubicacion.longitud
        mostrar mapa centrado en ubicacion
    fin boton
fin si

# üéÆ MINI JUEGO INTEGRADO
mostrar "=== CREANDO MINI JUEGO ==="
crear canvas id="juego" ancho=400 alto=300
crear sprite "pelota" x=200 y=150 radio=10 color="rojo"
velocidad_x = 3
velocidad_y = 2
pelota_x = 200
pelota_y = 150

repetir cada 16 milisegundos
    # Mover pelota
    pelota_x = pelota_x + velocidad_x
    pelota_y = pelota_y + velocidad_y
    
    # Rebotes en bordes
    si pelota_x <= 0 o pelota_x >= 400
        velocidad_x = velocidad_x * -1
    fin si
    
    si pelota_y <= 0 o pelota_y >= 300
        velocidad_y = velocidad_y * -1
    fin si
    
    # Actualizar sprite
    actualizar sprite "pelota" x=pelota_x y=pelota_y
    
    # Dibujar
    limpiar canvas
    dibujar sprite "pelota"
fin repetir

# ü§ñ INTEGRACI√ìN CON IA
mostrar "=== CONECTANDO IA ==="
crear boton "Pregunta a la IA" al hacer click
    pregunta = obtener valor de input "pregunta-ia"
    respuesta = preguntar_ia pregunta
    mostrar en "respuesta-ia" respuesta
    
    # Generar c√≥digo si se solicita
    si pregunta contiene "generar c√≥digo"
        codigo_generado = ia_generar_codigo pregunta
        mostrar codigo_generado en editor
    fin si
fin boton

# üåê CONECTIVIDAD IoT (si est√° disponible)
mostrar "=== CONFIGURANDO IoT ==="
si sensor_temperatura_disponible
    temperatura = leer sensor_temperatura
    mostrar "Temperatura actual: " + temperatura + "¬∞C"
    
    si temperatura > 25
        encender ventilador
        enviar notificacion "Ventilador encendido - Temp: " + temperatura
    fin si
    
    # Enviar datos a la nube cada minuto
    programar cada 60000 milisegundos
        datos_sensor = {
            "temperatura": leer sensor_temperatura,
            "humedad": leer sensor_humedad,
            "timestamp": fecha_actual
        }
        enviar_a_nube datos_sensor
    fin programar
fin si

# üíæ BASE DE DATOS
mostrar "=== CONFIGURANDO BASE DE DATOS ==="
conectar base_datos tipo="sqlite" archivo="vader_app.db"

crear tabla "usuarios" campos=[
    "id INTEGER PRIMARY KEY",
    "nombre TEXT NOT NULL", 
    "email TEXT UNIQUE",
    "creado DATETIME DEFAULT CURRENT_TIMESTAMP"
]

# Insertar usuario de prueba
insertar en "usuarios" valores={
    "nombre": "Usuario Vader",
    "email": "usuario@vader.com"
}

# Consultar usuarios
usuarios_db = consultar "SELECT * FROM usuarios"
mostrar "Usuarios en DB: " + usuarios_db

# üöÄ INICIALIZAR APLICACI√ìN
mostrar "=== INICIANDO APLICACI√ìN UNIVERSAL ==="
iniciar servidor
abrir navegador en "http://localhost:8080"
mostrar "üéâ ¬°Aplicaci√≥n Universal Vader funcionando!"
mostrar "Frontend ‚úÖ Backend ‚úÖ M√≥vil ‚úÖ Gaming ‚úÖ IA ‚úÖ IoT ‚úÖ DB ‚úÖ"

# üéØ MENSAJE FINAL
mostrar "¬°TODO ESTO EN UN SOLO ARCHIVO .VDR!"
mostrar "¬°VADER ES REALMENTE UNIVERSAL!"
